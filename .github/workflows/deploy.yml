# This is a basic workflow to help you get started with Actions

name: Merge CD
on:
  pull_request:
    types:
      - opened
      - edited
      - closed
    branches:
      - "main"
  merge_group:
    types:
      - checks_requested
    branches:
      - "main"
  workflow_dispatch:

jobs:
  print_info:
    name: print info
    runs-on: self-hosted
    env:
      GITHUB_CONTEXT: ${{ toJSON(github) }}
    steps:
      - run: |
          echo ${{github.event.pull_request.merged}}
          echo ${{ toJson(github.event.pull_request.merged) }}
          echo "$GITHUB_CONTEXT"

  build:
    name: Build deploy version and Test
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run docker build
        run: |
          docker build -t test_django .
      # Runs a set of commands using the runners shell
      - name: Tests
        run: |
          docker run --rm --name test_django_run_tests test_django python3 manage.py test

  deploy:
    name: Deploy
    if: github.event.pull_request.merged == true
    needs: [ build ]
    runs-on: self-hosted
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Production deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/projects/test_cicd
            cd ~/projects/test_cicd
            git clone git@github.com:${{ github.repository }} test_project
            cd test_project
            docker build -t test_django_proj .
            if [ $( docker ps -a | grep test_django_proj | wc -l ) -gt 0 ]; then
              docker stop test_django
              docker rm test_django
            fi
            docker run --name test_django_proj -p 9880:8080 -d test_django_proj
